//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: 407.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#ifdef __GNUG__
    #pragma implementation "407_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "407_wdr.h"


// Implement window functions

wxSizer *MainPanel( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 2, 0, 0 );
    item0->AddGrowableCol( 1 );
    item0->AddGrowableRow( 0 );

    wxFlexGridSizer *item1 = new wxFlexGridSizer( 1, 0, 0 );
    item1->AddGrowableRow( 0 );

    wxListCtrl *item2 = new wxListCtrl( parent, ID_LISTCTRL, wxDefaultPosition, wxSize(190,120), wxLC_ICON|wxLC_SINGLE_SEL|wxSUNKEN_BORDER );
    item2->SetForegroundColour( *wxWHITE );
    item2->SetBackgroundColour( *wxBLACK );
    item1->Add( item2, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxTOP|wxBOTTOM, 5 );

    wxStaticLine *item3 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, wxT("Face"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->Add( item5, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxString *strs6 = (wxString*) NULL;
    wxComboBox *item6 = new wxComboBox( parent, ID_COMBO, wxT(""), wxDefaultPosition, wxSize(100,-1), 0, strs6, wxCB_SIMPLE|wxCB_READONLY );
    item4->Add( item6, 0, wxALIGN_CENTRE|wxALL, 5 );

    item1->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_TEXT, wxT("Rotations"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxString strs9[] = 
    {
        wxT("ComboItem")
    };
    wxComboBox *item9 = new wxComboBox( parent, ID_ROT_BOX, wxT(""), wxDefaultPosition, wxSize(100,-1), 1, strs9, wxCB_SIMPLE|wxCB_READONLY );
    item7->Add( item9, 0, wxALIGN_CENTRE|wxALL, 5 );

    item1->Add( item7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxBoxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxButton *item11 = new wxButton( parent, ID_ORB, wxT("Orbit"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item12 = new wxButton( parent, ID_STAB, wxT("Stabilizer"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item12, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item1->Add( item10, 0, wxALIGN_CENTRE, 5 );

    wxWindow *item13 = parent->FindWindow( ID_HTML );
    wxASSERT( item13 );
    item1->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxWindow *item14 = parent->FindWindow( ID_GLCANVAS );
    wxASSERT( item14 );
    item0->Add( item14, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions


// End of generated file
